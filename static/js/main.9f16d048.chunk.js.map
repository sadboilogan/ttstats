{"version":3,"sources":["_Dispatch.js","_Store.js","components/ServersStatus.js","components/ServerInfo.js","components/PlayersFinder.js","components/JobsStats.js","components/VehicleStats.js","components/Timer.js","index.js","App.js"],"names":["timeout","promise","Promise","resolve","reject","setTimeout","Error","then","initAllServers","dispatch","type","serversListJSON","forEach","server","index","data","fetchServer","fetch","res","json","players","player","isLoaded","playersData","serverData","lastUpdate","Date","now","error","catch","fetchDetailedServer","ip","vehicleData","map","err","console","log","reducer","action","tempArray","servers","slice","splice","inited","initialState","StoreContext","createContext","StoreProvider","children","useReducer","state","useEffect","dispatchList","Provider","value","ServersStatus","store","useContext","id","key","name","className","undefined","href","title","length","limit","uptime","to","reduce","acc","ServerInfo","props","urlprop","parseInt","url","isNaN","header","target","rel","src","height","alt","toTimeString","PlayersList","jobselectURL","item","split","decodeURI","useState","playerFinderMessages","playerFinderInputField","playerFinderFound","serverSelect","jobSelect","localState","setlocalState","jobList","setJobList","handlePlayerFinderSubmit","isButton","input","toLowerCase","playername","includes","push","s","tempJobsList","placeholder","onChange","handlePlayersNameInput","onKeyDown","e","preventDefault","htmlFor","handleJobSelect","job","onClick","colorArray","JobsStats","entries","counter","setState","chartRef","useRef","jobs","sortedEntries","Object","sort","item1","item2","val","current","getContext","instance","Chart","labels","datasets","backgroundColor","borderWidth","options","legend","display","responsive","tooltips","callbacks","label","tooltipItem","dataset","datasetIndex","total","previousValue","currentValue","percentage","Math","floor","destroy","encodeURI","ref","VehicleStats","isLoadingServers","setIsLoadingServers","list","totalCounter","vehicle","vehicle_model","vehicle_name","list2","values","a","b","Timer","online","ReactDOM","render","basename","component","location","search","document","getElementById"],"mappings":"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","file":"static/js/main.9f16d048.chunk.js","sourcesContent":["import serversListJSON from \"./json/serversList.json\";\r\n// import serversListJSON from \"./serversListEmpty.json\";\r\n\r\nconst timeout = (promise) => new Promise(function(resolve, reject) {\r\n    setTimeout(() => reject(new Error(\"timeout\")), 2000)\r\n    promise.then(resolve, reject)\r\n})\r\n\r\nexport const initAllServers = () => dispatch => {\r\n    dispatch({type: \"CLEARSERVERSLIST\"})\r\n\r\n    serversListJSON.forEach((server,index) => {\r\n        dispatch({\r\n            type: \"ADDSERVER\",\r\n            data: {\r\n                \"error\": null,\r\n                \"isLoaded\": false,\r\n                \"ip\": server[0],\r\n                \"name\": server[1],\r\n                \"playersData\": null,\r\n                \"serverData\": null,\r\n                \"lastUpdate\": null,\r\n                \"vehicleData\": null\r\n            },\r\n            index\r\n        })\r\n        fetchServer(server,index)(dispatch);\r\n    });\r\n\r\n    dispatch({type: \"SERVERSINITED\"})\r\n};\r\n\r\n// export const initAllDetailedServers = () => (state) => (dispatch) => {\r\n//     state.servers.forEach((server,index) => {\r\n//         if(server.isLoaded && !server.error && !server.vehicleData)\r\n//             fetchDetailedServer(server,index)(dispatch)\r\n//     });\r\n// };\r\n\r\n\r\nexport const fetchServer = (server,index) => dispatch => {\r\n    // console.log(\"index\",index)\r\n    timeout(\r\n        //https://cors-anywhere.herokuapp.com/\r\n        fetch(\"http://\"+server[0]+\"/status/widget/players.json\")\r\n        // fetch(\"https://cors-anywhere.herokuapp.com/http://\"+server[0]+\"/status/widget/players.json\")\r\n        .then(res => res.json())\r\n        ).then(\r\n        (res) => {\r\n            res.players.forEach(player=>{if(player[5] === \"\") player[5] = \"Unemployed\";});\r\n            \r\n            dispatch({\r\n                type: \"UPDATESERVER\",\r\n                data: {\r\n                    isLoaded: true,\r\n                    playersData: res.players,\r\n                    serverData: res.server,\r\n                    lastUpdate: Date.now()\r\n                },\r\n                index\r\n            })\r\n        },\r\n        () => {\r\n            dispatch({\r\n                type: \"UPDATESERVER\",\r\n                data: {\r\n                    isLoaded: true,\r\n                    error: true,\r\n                    lastUpdate: Date.now()\r\n                },\r\n                index\r\n            })\r\n        }\r\n    ).catch(() => {\r\n        dispatch({\r\n            type: \"UPDATESERVER\",\r\n            data: {\r\n                isLoaded: true,\r\n                error: true,\r\n                lastUpdate: Date.now()\r\n            },\r\n            index\r\n        })\r\n})}\r\n\r\n\r\nexport const fetchDetailedServer = (server,index) => dispatch => {\r\n    timeout(\r\n        fetch(\"http://\"+server.ip+\"/status/map/positions.json\")\r\n        .then(res => res.json()))\r\n        .then(res => {\r\n            dispatch({\r\n                type: \"UPDATESERVER\",\r\n                data: {\r\n                    vehicleData: res.players.map(player=>player[4])\r\n                },\r\n                index\r\n            });\r\n    }).catch((err)=>console.log(err))\r\n}","import React, { createContext, useReducer, useEffect } from 'react';\r\nimport * as dispatchList from \"./_Dispatch.js\"\r\n\r\n\r\nconst reducer = (data, action) => {\r\n    switch(action.type){\r\n        // case (\"SET\"):\r\n        //     return {\r\n        //         ...data,\r\n        //         ...action.data\r\n        //     }\r\n        // case (\"PUSH\"):\r\n        //     if(data.servers) data.servers.push(action.data)\r\n        //     else data.servers = [action.data];\r\n        //     return {...data};\r\n        case (\"ADDSERVER\"):\r\n            // if(!data.servers) data.servers = [];\r\n            const tempArray = data.servers.slice();\r\n            tempArray.splice(action.index, 0, action.data);\r\n            data.servers = tempArray;\r\n            return {...data};\r\n\r\n        case (\"SERVERSINITED\"):\r\n            return {...data, inited: true};\r\n\r\n        case (\"UPDATESERVER\"):\r\n            data.servers = data.servers.map((data, index) => index !== action.index ? data : {\r\n                  ...data,\r\n                  ...action.data\r\n                });\r\n            return {...data};\r\n\r\n        case (\"CLEARSERVERSLIST\"):\r\n            data.servers = [];\r\n            return {...data};\r\n\r\n        default:\r\n            return data;\r\n    }\r\n}\r\n\r\n\r\nconst initialState = {\r\n    servers: [],\r\n    inited: false\r\n}\r\n\r\nexport const StoreContext = createContext(initialState);\r\n\r\nexport const StoreProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    useEffect(() => {\r\n        dispatchList.initAllServers()(dispatch)\r\n    }, []);\r\n\r\n  return (<StoreContext.Provider value={{state, dispatch, dispatchList}}>\r\n    {children}\r\n  </StoreContext.Provider>);\r\n}","import React, {useContext} from \"react\";\r\nimport {StoreContext} from \"../_Store\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nexport default function ServersStatus(){\r\n    const store = useContext(StoreContext);\r\n\r\n    return (\r\n        <div id=\"serversStatus\">\r\n            <h2>Transport Tycoon Servers List</h2>\r\n            \r\n            <table>\r\n                <tbody>\r\n                <tr><th>Connect</th><th>Players</th><th>Status</th><th>Uptime</th><th>Details</th></tr>\r\n                {store.state.servers.map((server,index)=>{\r\n                    if (server.error) {\r\n                        return (\r\n                            <tr key={index}><td>{server.ip}<br/><b>{server.name}</b></td><td>-/-</td><td className=\"offline\">OFFLINE</td><td></td><td></td></tr>\r\n                        );\r\n\r\n                    } else if (server.isLoaded === false) {\r\n\r\n                        return (\r\n                            <tr key={index}><td>{server.ip}<br/><b>{server.name}</b></td><td>-/-</td><td className=\"loading\">Loading</td><td></td><td></td></tr>\r\n                        );\r\n                    \r\n                    } else if (server.playersData === undefined) {\r\n                        return (\r\n                            <tr key={index}><td>{server.ip}<br/><b>{server.name}</b></td><td>-/-</td><td className=\"offline\">ERROR</td><td></td><td></td></tr>\r\n                        );\r\n\r\n                    } else {\r\n                        return (\r\n                            <tr key={index}><td><a href ={\"fivem://connect/\" + server.ip} title=\"connect\">{server.ip}</a><br/><b>{server.name}</b></td><td>{server.playersData.length}/{server.serverData.limit}</td><td className=\"online\">ONLINE</td><td>{server.serverData ? server.serverData.uptime : \"-\"}</td><td><Link to={\"/?serverinfo=\"+(+index+1)} className=\"btn btn-primary\">Players</Link></td></tr>\r\n                        );\r\n                    }\r\n                })}\r\n                </tbody>\r\n            </table>\r\n            <h3>Total Players Online: {store.state.servers.reduce((acc,server)=>server.isLoaded && server.playersData ? acc + server.playersData.length : acc,0)}</h3>\r\n        </div>\r\n    )\r\n\r\n\r\n    \r\n}","import React, {useContext} from \"react\";\r\nimport {StoreContext} from \"../_Store\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function ServerInfo (props) {\r\n    const store = useContext(StoreContext);\r\n    const urlprop = parseInt(props.url[1])\r\n    if(!urlprop || isNaN(urlprop))\r\n        return <h2>URL ERROR</h2>;\r\n\r\n    const server = store.state.servers[urlprop-1];\r\n    if(store.state.inited === false){\r\n        return <h2>Loading</h2>;\r\n    }else if(server === undefined){\r\n        return <h2>SERVER ERROR</h2>;\r\n    }else{\r\n        const header = (\r\n            <div>\r\n            <h2>\r\n                Players List On {server.name}<br/>\r\n                IP: <a href ={\"fivem://connect/\" + server.ip}>{server.ip}</a><br/>\r\n                Uptime: {server.serverData ? server.serverData.uptime : \"?\"}<br/>\r\n                <Link to=\"/?status\" className=\"btn btn-primary\">Back</Link>\r\n            </h2>\r\n            </div>)\r\n\r\n        if(!server.playersData || server.playersData.length === 0){\r\n            return (\r\n                <div id=\"serverInfo\">\r\n                {header}\r\n                <h2>No Players</h2>\r\n                </div>\r\n            ) \r\n        }\r\n\r\n        return (\r\n            <div id=\"serverInfo\">\r\n                {header}\r\n                \r\n                <table>\r\n                <tbody>\r\n                    <tr><th>Avatar</th><th>#</th><th>Name</th><th>ID</th><th>Job</th></tr>\r\n                    {server.playersData.map((player,index) => (\r\n                    <tr key={index}>\r\n                        <td>{player[3] ? \r\n                            <a href={player[3]} target=\"_blank\" rel=\"noopener noreferrer\"><img src={player[3] || \"#\"} height=\"50px\" alt=\"img\" className=\"avatar\"/></a> : \r\n                            <div className=\"no-avatar\"/>\r\n                        }</td>\r\n                        <td>#{index+1}</td>\r\n                        <td><b>{player[0]}</b></td>\r\n                        <td>{player[2]}</td>\r\n                        <td>{player[5] || \"-\"}</td>\r\n                    </tr>\r\n                    ))}\r\n\r\n                </tbody>\r\n                </table>\r\n                <h2>Updated on {new Date(server.lastUpdate).toTimeString()}</h2>\r\n            </div>)\r\n\r\n\r\n    }\r\n}","import React, {useContext, useState, useEffect} from \"react\";\r\nimport {StoreContext} from \"../_Store\";\r\n\r\nconst showAvatar = false;\r\n\r\nexport default function PlayersList (props) {\r\n    const store = useContext(StoreContext);\r\n\r\n    var jobselectURL;\r\n    // var serverselectURL;\r\n\r\n    if(props.url.length>1){\r\n        // console.log(props.url)\r\n        props.url.forEach(item=>{\r\n            const data = item.split(\":\");\r\n            if(data[0] === \"job\"){\r\n                jobselectURL = decodeURI(data[1]);\r\n            }\r\n            // else if(data[0] === \"server\"){\r\n            //     serverselectURL = decodeURI(data[1]);\r\n            // }\r\n        })\r\n        // console.log(encodeURI(jobselectURL))\r\n    }\r\n\r\n    const [localState, setlocalState] = useState({\r\n        playerFinderMessages: [],\r\n        playerFinderInputField: \"\",\r\n        playerFinderFound: [],\r\n        serverSelect: \"All Servers\",\r\n        jobSelect: jobselectURL || \"All Jobs\"\r\n    });\r\n    // console.log(localState)\r\n\r\n\r\n\r\n    const [jobList,setJobList] = useState([])\r\n\r\n    // console.log(localState)\r\n\r\n    const handlePlayersNameInput = (input) => {\r\n        const value = input.target.value;\r\n        setlocalState(s => ({...s, playerFinderInputField: value }));\r\n    }\r\n\r\n    const handleServerSelect = (input) => {\r\n        const value = input.target.value;\r\n        setlocalState(s => ({...s, serverSelect: value }));\r\n    }\r\n\r\n    const handleJobSelect = (input) => {\r\n        const value = input.target.value;\r\n        setlocalState(s => ({...s, jobSelect: value }));\r\n    }\r\n\r\n    const _handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            handlePlayerFinderSubmit();\r\n        }\r\n    }\r\n\r\n    const handlePlayerFinderSubmit = (isButton = true) => {\r\n        // if(!localState.playerFinderInputField || localState.playerFinderInputField.length < 1)\r\n        //     return setlocalState({...localState, playerFinderMessages: \"Invalid name or in-game id\"});\r\n        const input = localState.playerFinderInputField.toLowerCase()\r\n        const playerFinderFound = [];\r\n        store.state.servers.forEach(server=>{\r\n            if(server.playersData === null)return;\r\n            server.playersData.forEach(player=>{\r\n                const playername = (player[0]+\"#\"+player[2]);\r\n                if(playername.toLowerCase().includes(input) && \r\n                    (localState.serverSelect === \"All Servers\" || localState.serverSelect === server.name) &&\r\n                    (localState.jobSelect === \"All Jobs\" || localState.jobSelect === player[5])){\r\n                        playerFinderFound.push([\r\n                            playername,\r\n                            server[\"ip\"],\r\n                            server[\"name\"],\r\n                            player[3],\r\n                            player[5]\r\n                        ])\r\n                    }\r\n            })\r\n        })\r\n\r\n        setlocalState(s=>(\r\n            playerFinderFound.length > 0 ? \r\n                    {   ...s,\r\n                        playerFinderMessages: \"Found \" + playerFinderFound.length + \" player\" +(playerFinderFound.length === 1 ?\"\":\"s\"),\r\n                        playerFinderFound\r\n                    } : {\r\n                        ...s,\r\n                        playerFinderMessages: isButton ? \"Found nothing\" : \"...\",\r\n                        playerFinderFound: []\r\n                    }\r\n            )\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        const tempJobsList = []\r\n        store.state.servers.forEach(server=>{\r\n            if(server.playersData){\r\n                server.playersData.forEach(player=>{\r\n                    if(!tempJobsList.includes(player[5])){\r\n                        tempJobsList.push(player[5]);\r\n                    }\r\n                })\r\n            }\r\n        })\r\n\r\n        setJobList(tempJobsList)\r\n\r\n        \r\n\r\n        handlePlayerFinderSubmit(false);\r\n    },[store.state.servers])\r\n\r\n  \r\n    return (\r\n        <div id=\"playersFinder\">\r\n            <h2>Online Players Finder</h2>\r\n            <div id=\"form\">\r\n                <form>\r\n                    <input type=\"text\" placeholder=\"Player's name or in-game id\" onChange={(input)=>handlePlayersNameInput(input)} onKeyDown={_handleKeyDown}/>\r\n                    <div>\r\n                        <label htmlFor=\"serverSelector\">Filter Server</label>\r\n                        <select id=\"serverSelector\" onChange={handleServerSelect} value={localState.serverSelect}>\r\n                            <option value=\"All Servers\">All Servers</option>\r\n                            {store.state.servers.map((server,index)=>\r\n                                server.isLoaded ? <option key={index} value={server.name}>{server.name}</option> : \"\"\r\n                            )}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label htmlFor=\"jobSelector\">Filter Job</label>\r\n                        <select id=\"jobSelector\" onChange={(input)=>handleJobSelect(input)} value={localState.jobSelect}> \r\n                            <option value=\"All Jobs\">All Jobs</option>\r\n                            {jobList.map((job,index)=>\r\n                                <option key={index} value={job}>{job}</option>\r\n                            )}\r\n                        </select>\r\n                    </div>\r\n\r\n\r\n                    <input type=\"button\" value=\"search\" onClick={()=>handlePlayerFinderSubmit()}/>\r\n                </form>\r\n            </div>\r\n\r\n\r\n            <h2>\r\n                {localState.playerFinderMessages}\r\n            </h2>\r\n\r\n\r\n            {!localState.playerFinderFound ? \"\" :\r\n            (<table>\r\n            <tbody>\r\n                {localState.playerFinderFound.map((player,index)=>\r\n                \r\n                    <tr key={index}>\r\n                        <td>{player[3] && showAvatar === true ? //todo \r\n                            <a href={player[3]} target=\"_blank\" rel=\"noopener noreferrer\"><img src={player[3] || \"#\"} height=\"50px\" alt=\"img\" className=\"avatar\"/></a> : \r\n                            <div className=\"no-avatar\"/>\r\n                        }</td>\r\n                        <td>#{index+1}</td>\r\n                        <td><b>{player[0]}</b></td>\r\n                        <td>{player[4] || \"-\"}</td>\r\n                        <td><a href ={\"fivem://connect/\" + player[1]} title=\"connect\">{player[1]}</a><br/><b>{player[2]}</b></td>\r\n                    </tr>\r\n                )}\r\n            </tbody>\r\n            </table>)\r\n            }\r\n            <h3>Total Players Online: {store.state.servers.reduce((acc,server)=>server.isLoaded && server.playersData ? acc + server.playersData.length : acc,0)}</h3>\r\n    </div>\r\n    )\r\n\r\n}","import React, {useContext, useEffect, useState, useRef} from \"react\";\r\nimport {StoreContext} from \"../_Store\";\r\nimport Chart from \"chart.js\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst colorArray = [\r\n    \"#FF0000\",\"#00FF00\",\"#800000\",\"#00FFFF\",\"#000000\",\"#B8860B\",\"#4B0082\",\"#FFDEAD\",\"#8B4513\",\"#A52A2A\",\"#B22222\",\"#228B22\",\"#008B8B\",\"#BA55D3\",\"#F0F8FF\",\"#FF8C00\",\"#FF69B4\",\"#FFA07A\",\"#C71585\",\"#FFF8DC\",\"#F0FFF0\",\"#FFFFFF\",\"#00FF7F\",\"#0000FF\",\"#FFF5EE\",\"#2F4F4F\",\"#006400\",\"#9966CC\",\"#FF6347\",\"#ADD8E6\",\"#FF0000\",\"#00FF00\",\"#800000\",\"#00FFFF\",\"#000000\",\"#B8860B\",\"#4B0082\",\"#FFDEAD\",\"#8B4513\",\"#A52A2A\",\"#B22222\",\"#228B22\",\"#008B8B\",\"#BA55D3\",\"#F0F8FF\",\"#FF8C00\",\"#FF69B4\",\"#FFA07A\",\"#C71585\",\"#FFF8DC\",\"#F0FFF0\",\"#FFFFFF\",\"#00FF7F\",\"#0000FF\",\"#FFF5EE\",\"#2F4F4F\",\"#006400\",\"#9966CC\",\"#FF6347\",\r\n    \"#ADD8E6\",\"#FF69B4\",\"#FFA07A\",\"#C71585\",\"#FFF8DC\",\"#F0FFF0\",\"#FFFFFF\",\"#00FF7F\",\"#0000FF\",\"#FFF5EE\",\"#2F4F4F\",\"#006400\",\"#9966CC\",\"#FF6347\",\"#ADD8E6\",\"#FF0000\",\"#00FF00\",\"#800000\",\"#00FFFF\",\"#000000\",\"#B8860B\",\"#4B0082\",\"#FFDEAD\",\"#8B4513\",\"#A52A2A\",\"#B22222\",\"#228B22\",\"#008B8B\",\"#BA55D3\",\"#F0F8FF\",\"#FF8C00\",\"#FF69B4\",\"#FFA07A\",\"#C71585\",\"#FFF8DC\",\"#F0FFF0\",\"#FFFFFF\",\"#00FF7F\",\"#0000FF\",\"#FFF5EE\",\"#2F4F4F\",\"#006400\",\"#9966CC\",\"#FF6347\",\r\n    \"#ADD8E6\"\r\n];\r\n\r\nexport default function JobsStats () {\r\n    const [state, setState] = useState({entries: [], counter: 0});\r\n    const store = useContext(StoreContext);\r\n    const chartRef = useRef();\r\n\r\n    \r\n    useEffect(() => {\r\n        if(store.state.servers.reduce((acc,server)=>server.isLoaded === true ? acc + 1 : acc,0) === store.state.servers.length){\r\n            const jobs = {}\r\n            store.state.servers.forEach(server=>{\r\n                if(server.isLoaded === true && server.playersData !== null){\r\n                    server.playersData.forEach(player=>{\r\n                        if(jobs[player[5]] === undefined){\r\n                            jobs[player[5]] = 1;\r\n                        }else{\r\n                            jobs[player[5]]++;\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            const sortedEntries = (Object.entries(jobs).sort((item1,item2)=>item2[1]-item1[1]));\r\n            setState(s => ({\r\n                ...s,\r\n                entries: sortedEntries,\r\n                counter: (sortedEntries.reduce((acc,val)=>acc+val[1],0))\r\n            }))\r\n        }\r\n    }, [store.state.servers]); \r\n\r\n\r\n    useEffect(()=>{\r\n        if(chartRef && chartRef.current){\r\n            const current = chartRef.current.getContext(\"2d\");\r\n            console.log(current)\r\n            const instance = new Chart(current, {\r\n                type: 'pie',\r\n                data: {\r\n                labels: state.entries.map(item=>item[0]),\r\n                datasets: [{\r\n                    data: state.entries.map(item=>item[1]),\r\n                    backgroundColor: colorArray,\r\n                    borderWidth: 0\r\n                }]\r\n                },\r\n                options: {\r\n                    legend: {\r\n                        display: false\r\n                    },\r\n                    responsive: true,\r\n            \r\n                    tooltips: {\r\n                        callbacks: {\r\n                                label: (tooltipItem, data) => {\r\n                                const dataset = data.datasets[tooltipItem.datasetIndex];\r\n                                const total = dataset.data.reduce((previousValue, currentValue)=> previousValue + currentValue);\r\n            \r\n                                const currentValue = dataset.data[tooltipItem.index];\r\n                                const percentage = Math.floor(((currentValue/total) * 100)+0.5);\r\n                                return `${data.labels[tooltipItem.index]} - ${currentValue} players (${percentage}%)`;\r\n                                }\r\n                            }\r\n                        } \r\n                                \r\n                }});\r\n\r\n                return () => instance.destroy();\r\n    \r\n                // new Chart(current, {\r\n                //     type: \"line\",\r\n                //     data: {\r\n                //         //Bring in data\r\n                //         labels: [\"Jan\", \"Feb\", \"March\",\"AA\",\"Tee\"],\r\n                //         datasets: [\r\n                //             {\r\n                //                 label: \"Sales\",\r\n                //                 data: [86, 67, 91,66,55,66],\r\n                //             },\r\n                //             {\r\n                //                 label: \"Kaput\",\r\n                //                 data: [11, 2, 33,66,55,66],\r\n                //             }\r\n                //         ]\r\n                //     },\r\n                //     options: {\r\n                //         //Customize chart options\r\n                //     }\r\n                // });\r\n\r\n        }\r\n    },[state]);\r\n\r\n    return (\r\n        <div id=\"jobsStats\">\r\n            <h2>Top Jobs Now afasfasff x</h2>\r\n            {state.entries.length === 0 ? <div>Loading...</div> : \r\n                <table>\r\n                    <tbody>\r\n                    <tr><th>%</th><th>Job Name</th><th>Active</th><th>Links</th></tr>\r\n                    {state.entries.map((job,index)=>{\r\n                        return <tr key={index}><td>{Math.floor(((job[1]/state.counter) * 100)+0.5)}%</td><td>{job[0]}</td><td>{job[1]}</td><td><Link to={encodeURI(\"/?playersfinder=job:\" + job[0])}>Players</Link></td></tr>\r\n                    })}\r\n                    </tbody>\r\n                </table>\r\n            }\r\n\r\n            <div>\r\n                <canvas id=\"myChart\" ref={chartRef}></canvas>\r\n            </div>\r\n\r\n            <h3>Total Players Online: {store.state.servers.reduce((acc,server)=>server.isLoaded && server.playersData ? acc + server.playersData.length : acc,0)}</h3>\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\n\r\n// import React, {useContext, useEffect, useState} from \"react\";\r\n// import {StoreContext} from \"./_Store\";\r\n// import \"./Chart.min.css\";\r\n\r\n// export default function JobStats (props) {\r\n//     const store = useContext(StoreContext);\r\n//     const [state, setState] = useState(true); //script loaded\r\n//     useEffect(()=>{\r\n//         const script = document.createElement(\"style\");\r\n//         script.src = \"/Chart.min.js\";\r\n//         script.async = true;\r\n//         script.onload = () => setState(true);\r\n      \r\n//         document.body.appendChild(script);\r\n//     },[])\r\n\r\n//     if(state === false){\r\n//         return <div>Loading</div>\r\n//     }else{\r\n//         return <div>Rendered</div>\r\n//     }\r\n\r\n// }","import React, {useContext, useEffect, useState} from \"react\";\r\nimport {StoreContext} from \"../_Store\";\r\nimport Chart from \"chart.js\";\r\n// import {Link} from \"react-router-dom\";\r\n\r\n\r\nexport default function VehicleStats(){\r\n    const store = useContext(StoreContext);\r\n    const [isLoadingServers, setIsLoadingServers] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        if(store.state.inited){\r\n            store.state.servers.forEach((server,index) => {\r\n                if(server.isLoaded && !server.error && !server.vehicleData && !isLoadingServers.includes(index)){\r\n                    setIsLoadingServers(s=>[...s, index]);\r\n                    store.dispatchList.fetchDetailedServer(server,index)(store.dispatch)\r\n                }\r\n            });\r\n        }\r\n    },[store.state.inited, store.state.servers])\r\n\r\n    const list = {};\r\n    let totalCounter = 0;\r\n    store.state.servers.forEach((server,index)=>{\r\n        if(!server.vehicleData)return;\r\n\r\n        server.vehicleData.forEach(vehicle=>{\r\n            if(list[vehicle.vehicle_model] === undefined){\r\n                list[vehicle.vehicle_model] = {\r\n                    counter: 1, \r\n                    vehicle_name: vehicle.vehicle_name\r\n                };\r\n                totalCounter++;\r\n            }else{\r\n                list[vehicle.vehicle_model].counter++;\r\n                totalCounter++;\r\n            }\r\n\r\n        })\r\n    })\r\n\r\n    const list2 = Object.values(list).sort((a,b) => b.counter - a.counter);\r\n    \r\n    return (\r\n        <div id=\"carsStats\">\r\n            <h2>Top Vehicles Now</h2>\r\n            \r\n            <table>\r\n                <tbody>\r\n                {/* <tr><th>Connect</th><th>Players</th><th>Status</th><th>Uptime</th><th>Details</th></tr> */}\r\n                {/* {store.state.servers.map((server,index)=>\r\n                    !server.vehicleData ? \"\" :\r\n                server.vehicleData.map(player => <tr><td>{counter++}</td><td>{index}</td><td>{player.vehicle_name}</td></tr> )\r\n                )} */}\r\n                {list2.length === 0 ? \r\n                    <tr><td>N/A</td></tr> \r\n                :   <>\r\n                    <tr><th>%</th><th>Job Name</th><th>Active</th></tr>\r\n                    {list2.map((vehicle,index)=><tr key={index}><td>{Math.floor(((vehicle.counter/totalCounter) * 100)+0.5)}%</td><td>{vehicle.vehicle_name}</td><td>{vehicle.counter}</td></tr>)}\r\n                    </>\r\n                }\r\n                </tbody>\r\n            </table>\r\n            <h3>Total Players Online: {store.state.servers.reduce((acc,server)=>server.isLoaded && server.playersData ? acc + server.playersData.length : acc,0)}</h3>\r\n\r\n        </div>\r\n    )\r\n\r\n    // return (\r\n    //     <div id=\"carsStats\">\r\n    //         <h2>Transport Tycoon Servers List</h2>\r\n            \r\n    //         <table>\r\n    //             <tbody>\r\n    //             {/* <tr><th>Connect</th><th>Players</th><th>Status</th><th>Uptime</th><th>Details</th></tr> */}\r\n    //             {store.state.servers.map((server,index)=>\r\n    //                 <tr key={index}><td>{server.index}</td><td>{JSON.stringify(server.vehicleData)}</td></tr>\r\n    //             )}\r\n    //             </tbody>\r\n    //         </table>\r\n    //     </div>\r\n    // )\r\n\r\n\r\n    \r\n}","import React, {useContext, useEffect, useState} from \"react\";\r\nimport {StoreContext} from \"../_Store\";\r\nimport {initAllServers} from \"../_Dispatch\";\r\n\r\nexport default function Timer (){\r\n    const [state, setState] = useState({total: 0, online: 0});\r\n    const store = useContext(StoreContext);\r\n    \r\n    function handleOnClickRefresh(){\r\n        initAllServers()(store.dispatch)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setState(s => ({\r\n            ...s,\r\n            total: store.state.servers.length,\r\n            online: store.state.servers.reduce((acc,server)=>server.isLoaded === true && server.serverData ? acc + 1 : acc ,0),\r\n        }));\r\n        // const interval = setInterval(() => {\r\n        //     setState(state+1);\r\n        // }, 1000);\r\n    \r\n        // return () => clearInterval(interval);\r\n    },[store.state.servers]);\r\n    \r\n\r\n\r\n\r\n    return (<>\r\n        <p>\r\n        Server data is loaded from {state.online} out of {state.total} servers <input type=\"button\" value=\"refresh all servers\" className=\"btn refresh\" onClick={handleOnClickRefresh}/>\r\n        </p>\r\n    </>)\r\n}","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport 'core-js/stable'\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./Style2.scss\";\n\nReactDOM.render(<App />, document.getElementById('root'));","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport ServersStatus from \"./components/ServersStatus\";\r\nimport ServerInfo from \"./components/ServerInfo\";\r\nimport PlayersFinder from \"./components/PlayersFinder\";\r\nimport JobsStats from \"./components/JobsStats\";\r\nimport VehicleStats from \"./components/VehicleStats\";\r\nimport Timer from \"./components/Timer\";\r\nimport {StoreProvider} from './_Store';\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router basename=\"ttstats\">\r\n      <StoreProvider>\r\n        <div id=\"header\">\r\n          <ul>\r\n            <li><Link to=\"/\">Servers Status</Link></li>\r\n            <li><Link to=\"?playersfinder\">Players Finder</Link></li>\r\n            <li><Link to=\"?player\">N/A</Link></li>\r\n            <li><Link to=\"?vehicles\">Vehicle Stats</Link></li>\r\n            <li><Link to=\"?jobs\">Jobs Stats</Link></li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div id=\"content\">\r\n          <Route component={\r\n            (props)=>{\r\n              const url = props.location.search.split(\"=\");\r\n              switch(url[0]){\r\n                case (\"?status\"):\r\n                  return <ServersStatus/>;\r\n                case (\"?serverinfo\"):\r\n                  return <ServerInfo url={url}/>;\r\n                case (\"?player\"):\r\n                  return <div>player</div>;\r\n                case (\"?jobs\"):\r\n                  return <JobsStats/>;\r\n                case (\"?vehicles\"):\r\n                  return <VehicleStats/>;\r\n                case (\"?playersfinder\"):\r\n                  return <PlayersFinder url={url}/>;\r\n                default:\r\n                  return <Redirect to=\"/?status\"/>;\r\n              }\r\n            }}/>\r\n        </div>\r\n\r\n        <div id=\"footer\">\r\n          <Timer/>\r\n        </div>\r\n      </StoreProvider>\r\n    </Router>\r\n  );\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["_Dispatch.js","_Store.js","ServersStatus.js","ServerDetails.js","PlayersFinder.js","JobsStats.js","Timer.js","index.js","App.js"],"names":["initAllServers","dispatch","type","serversListJSON","forEach","server","index","data","fetchServer","promise","console","log","fetch","then","res","json","Promise","resolve","reject","setTimeout","Error","players","player","isLoaded","playersData","serverData","lastUpdate","Date","now","error","catch","reducer","action","tempArray","servers","slice","splice","inited","map","initialState","StoreContext","createContext","StoreProvider","children","useReducer","state","useEffect","dispatches","Provider","value","ServersStatus","store","useContext","id","key","ip","name","style","color","undefined","href","title","length","limit","uptime","to","className","reduce","acc","ServerDetails","props","url","isNaN","header","target","rel","src","height","alt","toTimeString","PlayersList","jobselectURL","item","split","decodeURI","useState","playerFinderMessages","playerFinderInputField","playerFinderFound","serverSelect","jobSelect","localState","setlocalState","jobList","setJobList","handlePlayerFinderSubmit","isButton","input","toLowerCase","playername","includes","push","tempJobsList","placeholder","onChange","handlePlayersNameInput","onKeyDown","e","preventDefault","htmlFor","job","onClick","colorArray","JobsStats","entries","counter","setState","chartRef","useRef","jobs","sortedEntries","Object","sort","item1","item2","val","current","getContext","instance","Chart","labels","datasets","backgroundColor","borderWidth","options","legend","display","responsive","tooltips","callbacks","label","tooltipItem","dataset","datasetIndex","total","previousValue","currentValue","percentage","Math","floor","destroy","encodeURI","ref","Timer","online","ReactDOM","render","basename","component","location","search","parseInt","document","getElementById"],"mappings":"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","file":"static/js/main.fefac4c4.chunk.js","sourcesContent":["import serversListJSON from \"./json/serversList.json\";\r\n// import serversListJSON from \"./serversListEmpty.json\";\r\n\r\nconst timeout = (promise) => new Promise(function(resolve, reject) {\r\n    setTimeout(() => reject(new Error(\"timeout\")), 2000)\r\n    promise.then(resolve, reject)\r\n})\r\n\r\nexport const initAllServers = () => dispatch => {\r\n    dispatch({type: \"CLEARSERVERSLIST\"})\r\n\r\n    serversListJSON.forEach((server,index) => {\r\n        dispatch({\r\n            type: \"ADDSERVER\",\r\n            data: {\r\n                \"error\": null,\r\n                \"isLoaded\": false,\r\n                \"ip\": server[0],\r\n                \"name\": server[1],\r\n                \"playersData\": null,\r\n                \"serverData\": null,\r\n                \"lastUpdate\": null\r\n            },\r\n            index\r\n        })\r\n        fetchServer(server,index)(dispatch);\r\n    });\r\n\r\n    dispatch({type: \"SERVERSINITED\"})\r\n};\r\n\r\n\r\n// const fetchServer = (server,index) => {\r\nexport const fetchServer = (server,index) => dispatch => {\r\n    console.log(\"index\",index)\r\n    timeout(\r\n        //https://cors-anywhere.herokuapp.com/\r\n        fetch(\"http://\"+server[0]+\"/status/widget/players.json\")\r\n        // fetch(\"https://cors-anywhere.herokuapp.com/http://\"+server[0]+\"/status/widget/players.json\")\r\n        .then(res => res.json())\r\n        ).then(\r\n        (res) => {\r\n            res.players.forEach(player=>{if(player[5] === \"\") player[5] = \"Unemployed\";});\r\n            \r\n            dispatch({\r\n                type: \"UPDATESERVER\",\r\n                data: {\r\n                    isLoaded: true,\r\n                    playersData: res.players,\r\n                    serverData: res.server,\r\n                    lastUpdate: Date.now()\r\n                },\r\n                index\r\n            })\r\n        },\r\n        () => {\r\n            dispatch({\r\n                type: \"UPDATESERVER\",\r\n                data: {\r\n                    isLoaded: true,\r\n                    error: true,\r\n                    lastUpdate: Date.now()\r\n                },\r\n                index\r\n            })\r\n        }\r\n    ).catch(() => {\r\n        dispatch({\r\n            type: \"UPDATESERVER\",\r\n            data: {\r\n                isLoaded: true,\r\n                error: true,\r\n                lastUpdate: Date.now()\r\n            },\r\n            index\r\n        })\r\n})}","import React, { createContext, useReducer, useEffect } from 'react';\r\nimport * as dispatches from \"./_Dispatch.js\"\r\n\r\n\r\nconst reducer = (data, action) => {\r\n    switch(action.type){\r\n        // case (\"SET\"):\r\n        //     return {\r\n        //         ...data,\r\n        //         ...action.data\r\n        //     }\r\n        // case (\"PUSH\"):\r\n        //     if(data.servers) data.servers.push(action.data)\r\n        //     else data.servers = [action.data];\r\n        //     return {...data};\r\n        case (\"ADDSERVER\"):\r\n            // if(!data.servers) data.servers = [];\r\n            const tempArray = data.servers.slice();\r\n            tempArray.splice(action.index, 0, action.data);\r\n            data.servers = tempArray;\r\n            return {...data};\r\n\r\n        case (\"SERVERSINITED\"):\r\n            return {...data, inited: true};\r\n\r\n        case (\"UPDATESERVER\"):\r\n            data.servers = data.servers.map((data, index) => index !== action.index ? data : {\r\n                  ...data,\r\n                  ...action.data\r\n                });\r\n            return {...data};\r\n\r\n        case (\"CLEARSERVERSLIST\"):\r\n            data.servers = [];\r\n            return {...data};\r\n\r\n        default:\r\n            return data;\r\n    }\r\n}\r\n\r\n\r\nconst initialState = {\r\n    servers: [],\r\n    inited: false\r\n}\r\n\r\nexport const StoreContext = createContext(initialState);\r\n\r\nexport const StoreProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    useEffect(() => {\r\n        dispatches.initAllServers()(dispatch)\r\n    }, []);\r\n\r\n  return (<StoreContext.Provider value={{state, dispatch}}>\r\n    {children}\r\n  </StoreContext.Provider>);\r\n}","import React, {useContext, useEffect, useState} from \"react\";\r\nimport {StoreContext} from \"./_Store\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nexport default function ServersStatus(){\r\n    const store = useContext(StoreContext);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Transport Tycoon Servers List</h2>\r\n            \r\n            <table id=\"serversList\">\r\n                <tbody>\r\n                <tr><th>Connect</th><th>Players</th><th>Status</th><th>Uptime</th><th>Details</th></tr>\r\n                {store.state.servers.map((server,index)=>{\r\n                    if (server.error) {\r\n                        return (\r\n                            <tr key={index}><td>{server.ip}<br/><b>{server.name}</b></td><td>-/-</td><td style={{color: \"red\"}}>OFFLINE</td><td></td><td></td></tr>\r\n                        );\r\n\r\n                    } else if (server.isLoaded === false) {\r\n\r\n                        return (\r\n                            <tr key={index}><td>{server.ip}<br/><b>{server.name}</b></td><td>-/-</td><td style={{color: \"grey\"}}>Loading</td><td></td><td></td></tr>\r\n                        );\r\n                    \r\n                    } else if (server.playersData === undefined) {\r\n                        return (\r\n                            <tr key={index}><td>{server.ip}<br/><b>{server.name}</b></td><td>-/-</td><td style={{color: \"red\"}}>ERROR</td><td></td><td></td></tr>\r\n                        );\r\n\r\n                    } else {\r\n                        return (\r\n                            <tr key={index}><td><a href ={\"fivem://connect/\" + server.ip} title=\"connect\">{server.ip}</a><br/><b>{server.name}</b></td><td>{server.playersData.length}/{server.serverData.limit}</td><td style={{color: \"green\"}}>ONLINE</td><td>{server.serverData ? server.serverData.uptime : \"-\"}</td><td><Link to={\"/?serverinfo=\"+(+index+1)} className=\"btn btn-primary\">Players</Link></td></tr>\r\n                        );\r\n                    }\r\n                })}\r\n                </tbody>\r\n            </table>\r\n            <h3>Total Players Online: {store.state.servers.reduce((acc,server)=>server.isLoaded && server.playersData ? acc + server.playersData.length : acc,0)}</h3>\r\n        </div>\r\n    )\r\n\r\n\r\n    \r\n}","import React, {useContext} from \"react\";\r\nimport {StoreContext} from \"./_Store\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function ServerDetails (props) {\r\n    const store = useContext(StoreContext);\r\n\r\n    if(!props.url || isNaN(props.url))\r\n        return <div><h2>URL ERROR</h2></div>;\r\n\r\n    const server = store.state.servers[props.url-1];\r\n    if(store.state.inited === false){\r\n        return <div><h2>Loading</h2></div>;\r\n    }else if(server === undefined){\r\n        return <div><h2>SERVER ERROR</h2></div>;\r\n    }else{\r\n        const header = (\r\n            <div>\r\n            <h2>\r\n                Players List On {server.name}<br/>\r\n                IP: <a href ={\"fivem://connect/\" + server.ip}>{server.ip}</a><br/>\r\n                Uptime: {server.serverData ? server.serverData.uptime : \"?\"}<br/>\r\n                <Link to=\"/?status\" className=\"btn btn-primary\">Back</Link>\r\n            </h2>\r\n            </div>)\r\n\r\n        if(!server.playersData || server.playersData.length === 0){\r\n            return (\r\n                <div>\r\n                {header}\r\n                <h2>No Players</h2>\r\n                </div>\r\n            ) \r\n        }\r\n\r\n        return (\r\n            <div>\r\n            {header}\r\n            \r\n            <table id=\"playersList\">\r\n            <tbody>\r\n                <tr><th>Avatar</th><th>#</th><th>Name</th><th>ID</th><th>Job</th></tr>\r\n                {server.playersData.map((player,index) => (\r\n                <tr key={index}>\r\n                    <td>{player[3] ? \r\n                        <a href={player[3]} target=\"_blank\" rel=\"noopener noreferrer\"><img src={player[3] || \"#\"} height=\"50px\" alt=\"img\" className=\"avatar\"/></a> : \r\n                        <div className=\"no-avatar\"/>\r\n                    }</td>\r\n                    <td>#{index+1}</td>\r\n                    <td><b>{player[0]}</b></td>\r\n                    <td>{player[2]}</td>\r\n                    <td>{player[5] || \"-\"}</td>\r\n                </tr>\r\n                ))}\r\n\r\n            </tbody>\r\n            </table>\r\n            <h3>Updated on {new Date(server.lastUpdate).toTimeString()}</h3>\r\n            </div>)\r\n\r\n\r\n    }\r\n}","import React, {useContext, useState, useEffect} from \"react\";\r\nimport {StoreContext} from \"./_Store\";\r\n\r\nconst showAvatar = false;\r\n\r\nexport default function PlayersList (props) {\r\n    const store = useContext(StoreContext);\r\n\r\n    var jobselectURL;\r\n    var serverselectURL;\r\n\r\n    if(props.url.length>1){\r\n        // console.log(props.url)\r\n        props.url.forEach(item=>{\r\n            const data = item.split(\":\");\r\n            if(data[0] === \"job\"){\r\n                jobselectURL = decodeURI(data[1]);\r\n            }else if(data[0] === \"server\"){\r\n                serverselectURL = decodeURI(data[1]);\r\n            }\r\n        })\r\n        // console.log(encodeURI(jobselectURL))\r\n    }\r\n\r\n    const [localState, setlocalState] = useState({\r\n        playerFinderMessages: [],\r\n        playerFinderInputField: \"\",\r\n        playerFinderFound: [],\r\n        serverSelect: \"All Servers\",\r\n        jobSelect: jobselectURL || \"All Jobs\"\r\n    });\r\n    // console.log(localState)\r\n\r\n\r\n\r\n    const [jobList,setJobList] = useState([])\r\n\r\n    // console.log(localState)\r\n\r\n    const handlePlayersNameInput = (input) => {\r\n        setlocalState({...localState, playerFinderInputField: input.target.value });\r\n    }\r\n\r\n    const handleServerSelect = (input) => {\r\n        setlocalState({...localState, serverSelect: input.target.value });\r\n    }\r\n\r\n    const handleJobSelect = (input) => {\r\n        setlocalState({...localState, jobSelect: input.target.value });\r\n    }\r\n\r\n    const _handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            handlePlayerFinderSubmit();\r\n        }\r\n    }\r\n\r\n    const handlePlayerFinderSubmit = (isButton = true) => {\r\n        // if(!localState.playerFinderInputField || localState.playerFinderInputField.length < 1)\r\n        //     return setlocalState({...localState, playerFinderMessages: \"Invalid name or in-game id\"});\r\n        const input = localState.playerFinderInputField.toLowerCase()\r\n        const playerFinderFound = [];\r\n        store.state.servers.forEach(server=>{\r\n            if(server.playersData === null)return;\r\n            server.playersData.forEach(player=>{\r\n                const playername = (player[0]+\"#\"+player[2]);\r\n                if(playername.toLowerCase().includes(input) && \r\n                    (localState.serverSelect === \"All Servers\" || localState.serverSelect === server.name) &&\r\n                    (localState.jobSelect === \"All Jobs\" || localState.jobSelect === player[5])){\r\n                        playerFinderFound.push([\r\n                            playername,\r\n                            server[\"ip\"],\r\n                            server[\"name\"],\r\n                            player[3],\r\n                            player[5]\r\n                        ])\r\n                    }\r\n            })\r\n        })\r\n\r\n        setlocalState(\r\n            playerFinderFound.length > 0 ? \r\n                {   ...localState,\r\n                    playerFinderMessages: \"Found \" + playerFinderFound.length + \" player\" +(playerFinderFound.length === 1 ?\"\":\"s\"),\r\n                    playerFinderFound\r\n                } : {\r\n                    ...localState,\r\n                    playerFinderMessages: isButton ? \"Found nothing\" : \"...\",\r\n                    playerFinderFound: []\r\n                }\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        const tempJobsList = []\r\n        store.state.servers.forEach(server=>{\r\n            if(server.playersData){\r\n                server.playersData.forEach(player=>{\r\n                    if(!tempJobsList.includes(player[5])){\r\n                        tempJobsList.push(player[5]);\r\n                    }\r\n                })\r\n            }\r\n        })\r\n\r\n        setJobList(tempJobsList)\r\n\r\n        \r\n\r\n        handlePlayerFinderSubmit(false);\r\n    },[store.state.servers])\r\n\r\n  \r\n    return (\r\n    \r\n        <div id=\"playerFinder\">\r\n        <h2>Online Players Finder</h2>\r\n        <form>\r\n            <input type=\"text\" placeholder=\"Player's name or in-game id\" onChange={(input)=>handlePlayersNameInput(input)} onKeyDown={_handleKeyDown}/><br/>\r\n            \r\n            <label htmlFor=\"serverSelector\">Filter Server: </label>\r\n            <select id=\"serverSelector\" onChange={handleServerSelect} value={localState.serverSelect}>\r\n                <option value=\"All Servers\">All Servers</option>\r\n                {store.state.servers.map((server,index)=>\r\n                    server.isLoaded ? <option key={index} value={server.name}>{server.name}</option> : \"\"\r\n                )}\r\n            </select><br/>\r\n\r\n            <label htmlFor=\"jobSelector\">Filter Job: </label>\r\n            <select id=\"jobSelector\" onChange={handleJobSelect} value={localState.jobSelect}> \r\n                <option value=\"All Jobs\">All Jobs</option>\r\n                {jobList.map((job,index)=>\r\n                    <option key={index} value={job}>{job}</option>\r\n                )}\r\n            </select><br/>\r\n\r\n            <input type=\"button\" value=\"search\" onClick={()=>handlePlayerFinderSubmit()}/>\r\n        </form>\r\n\r\n\r\n\r\n        <div>\r\n        <p>\r\n            {localState.playerFinderMessages}\r\n        </p>\r\n        <table id=\"playersFound\">\r\n            <tbody>\r\n            {!localState.playerFinderFound ? \"\" :\r\n                localState.playerFinderFound.map((player,index)=>\r\n                \r\n                <tr key={index}>\r\n                    <td>{player[3] && showAvatar === true ? //todo \r\n                        <a href={player[3]} target=\"_blank\" rel=\"noopener noreferrer\"><img src={player[3] || \"#\"} height=\"50px\" alt=\"img\" className=\"avatar\"/></a> : \r\n                        <div className=\"no-avatar\"/>\r\n                    }</td>\r\n                    <td>#{index+1}</td>\r\n                    <td><b>{player[0]}</b></td>\r\n                    <td>{player[4] || \"-\"}</td>\r\n                    <td><a href ={\"fivem://connect/\" + player[1]} title=\"connect\">{player[1]}</a><br/><b>{player[2]}</b></td>\r\n                </tr>\r\n            )}\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n        </div>\r\n    )\r\n\r\n}","import React, {useContext, useEffect, useState, useRef} from \"react\";\r\nimport {StoreContext} from \"./_Store\";\r\nimport Chart from \"chart.js\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst colorArray = [\r\n    \"#FF0000\",\"#00FF00\",\"#800000\",\"#00FFFF\",\"#000000\",\"#B8860B\",\"#4B0082\",\"#FFDEAD\",\"#8B4513\",\"#A52A2A\",\"#B22222\",\"#228B22\",\"#008B8B\",\"#BA55D3\",\"#F0F8FF\",\"#FF8C00\",\"#FF69B4\",\"#FFA07A\",\"#C71585\",\"#FFF8DC\",\"#F0FFF0\",\"#FFFFFF\",\"#00FF7F\",\"#0000FF\",\"#FFF5EE\",\"#2F4F4F\",\"#006400\",\"#9966CC\",\"#FF6347\",\"#ADD8E6\",\"#FF0000\",\"#00FF00\",\"#800000\",\"#00FFFF\",\"#000000\",\"#B8860B\",\"#4B0082\",\"#FFDEAD\",\"#8B4513\",\"#A52A2A\",\"#B22222\",\"#228B22\",\"#008B8B\",\"#BA55D3\",\"#F0F8FF\",\"#FF8C00\",\"#FF69B4\",\"#FFA07A\",\"#C71585\",\"#FFF8DC\",\"#F0FFF0\",\"#FFFFFF\",\"#00FF7F\",\"#0000FF\",\"#FFF5EE\",\"#2F4F4F\",\"#006400\",\"#9966CC\",\"#FF6347\",\r\n    \"#ADD8E6\",\"#FF69B4\",\"#FFA07A\",\"#C71585\",\"#FFF8DC\",\"#F0FFF0\",\"#FFFFFF\",\"#00FF7F\",\"#0000FF\",\"#FFF5EE\",\"#2F4F4F\",\"#006400\",\"#9966CC\",\"#FF6347\",\"#ADD8E6\",\"#FF0000\",\"#00FF00\",\"#800000\",\"#00FFFF\",\"#000000\",\"#B8860B\",\"#4B0082\",\"#FFDEAD\",\"#8B4513\",\"#A52A2A\",\"#B22222\",\"#228B22\",\"#008B8B\",\"#BA55D3\",\"#F0F8FF\",\"#FF8C00\",\"#FF69B4\",\"#FFA07A\",\"#C71585\",\"#FFF8DC\",\"#F0FFF0\",\"#FFFFFF\",\"#00FF7F\",\"#0000FF\",\"#FFF5EE\",\"#2F4F4F\",\"#006400\",\"#9966CC\",\"#FF6347\",\r\n    \"#ADD8E6\"\r\n];\r\n\r\nexport default function JobsStats () {\r\n    const [state, setState] = useState({entries: [], counter: 0});\r\n    const store = useContext(StoreContext);\r\n    const chartRef = useRef();\r\n\r\n    \r\n    useEffect(() => {\r\n        if(store.state.servers.reduce((acc,server)=>server.isLoaded === true ? acc + 1 : acc,0) === store.state.servers.length){\r\n            const jobs = {}\r\n            store.state.servers.forEach(server=>{\r\n                if(server.isLoaded === true && server.playersData !== null){\r\n                    server.playersData.forEach(player=>{\r\n                        if(jobs[player[5]] === undefined){\r\n                            jobs[player[5]] = 1;\r\n                        }else{\r\n                            jobs[player[5]]++;\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            const sortedEntries = (Object.entries(jobs).sort((item1,item2)=>item2[1]-item1[1]));\r\n            setState({\r\n                ...state,\r\n                entries: sortedEntries,\r\n                counter: (sortedEntries.reduce((acc,val)=>acc+val[1],0))\r\n            })\r\n        }\r\n    }, [store.state.servers]); \r\n\r\n\r\n    useEffect(()=>{\r\n        if(chartRef && chartRef.current){\r\n            const current = chartRef.current.getContext(\"2d\");\r\n            console.log(current)\r\n            const instance = new Chart(current, {\r\n                type: 'pie',\r\n                data: {\r\n                labels: state.entries.map(item=>item[0]),\r\n                datasets: [{\r\n                    data: state.entries.map(item=>item[1]),\r\n                    backgroundColor: colorArray,\r\n                    borderWidth: 0\r\n                }]\r\n                },\r\n                options: {\r\n                    legend: {\r\n                        display: false\r\n                    },\r\n                    responsive: true,\r\n            \r\n                    tooltips: {\r\n                        callbacks: {\r\n                                label: (tooltipItem, data) => {\r\n                                const dataset = data.datasets[tooltipItem.datasetIndex];\r\n                                const total = dataset.data.reduce((previousValue, currentValue)=> previousValue + currentValue);\r\n            \r\n                                const currentValue = dataset.data[tooltipItem.index];\r\n                                const percentage = Math.floor(((currentValue/total) * 100)+0.5);\r\n                                return `${data.labels[tooltipItem.index]} - ${currentValue} players (${percentage}%)`;\r\n                                }\r\n                            }\r\n                        } \r\n                                \r\n                }});\r\n\r\n                return () => instance.destroy();\r\n    \r\n                // new Chart(current, {\r\n                //     type: \"line\",\r\n                //     data: {\r\n                //         //Bring in data\r\n                //         labels: [\"Jan\", \"Feb\", \"March\",\"AA\",\"Tee\"],\r\n                //         datasets: [\r\n                //             {\r\n                //                 label: \"Sales\",\r\n                //                 data: [86, 67, 91,66,55,66],\r\n                //             },\r\n                //             {\r\n                //                 label: \"Kaput\",\r\n                //                 data: [11, 2, 33,66,55,66],\r\n                //             }\r\n                //         ]\r\n                //     },\r\n                //     options: {\r\n                //         //Customize chart options\r\n                //     }\r\n                // });\r\n\r\n        }\r\n    },[state]);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Top Jobs Now</h2>\r\n            {state.entries.length === 0 ? <div>Loading...</div> : \r\n                <table className=\"jobstatstable\">\r\n                    <tbody>\r\n                    <tr><th>%</th><th>Job Name</th><th>Active</th><th>Links</th></tr>\r\n                    {state.entries.map((job,index)=>{\r\n                        return <tr key={index}><td>{Math.floor(((job[1]/state.counter) * 100)+0.5)}%</td><td>{job[0]}</td><td>{job[1]}</td><td><Link to={encodeURI(\"/?playersfinder=job:\" + job[0])}>Players</Link></td></tr>\r\n                    })}\r\n                    </tbody>\r\n                </table>\r\n            }\r\n\r\n            <div>\r\n                <canvas id=\"myChart\" ref={chartRef}></canvas>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\n\r\n// import React, {useContext, useEffect, useState} from \"react\";\r\n// import {StoreContext} from \"./_Store\";\r\n// import \"./Chart.min.css\";\r\n\r\n// export default function JobStats (props) {\r\n//     const store = useContext(StoreContext);\r\n//     const [state, setState] = useState(true); //script loaded\r\n//     useEffect(()=>{\r\n//         const script = document.createElement(\"style\");\r\n//         script.src = \"/Chart.min.js\";\r\n//         script.async = true;\r\n//         script.onload = () => setState(true);\r\n      \r\n//         document.body.appendChild(script);\r\n//     },[])\r\n\r\n//     if(state === false){\r\n//         return <div>Loading</div>\r\n//     }else{\r\n//         return <div>Rendered</div>\r\n//     }\r\n\r\n// }","import React, {useContext, useEffect, useState, StyleSheet} from \"react\";\r\nimport {StoreContext} from \"./_Store\";\r\nimport {initAllServers} from \"./_Dispatch\";\r\n\r\nexport default function Timer (){\r\n    const [state, setState] = useState({total: 0, online: 0});\r\n    const store = useContext(StoreContext);\r\n    \r\n    function handleOnClickRefresh(){\r\n        initAllServers()(store.dispatch)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setState({\r\n            ...state,\r\n            total: store.state.servers.length,\r\n            online: store.state.servers.reduce((acc,server)=>server.isLoaded === true && server.serverData ? acc + 1 : acc ,0),\r\n        });\r\n        // const interval = setInterval(() => {\r\n        //     setState(state+1);\r\n        // }, 1000);\r\n    \r\n        // return () => clearInterval(interval);\r\n    },[store.state.servers]);\r\n    \r\n\r\n\r\n\r\n    return (<>\r\n        <p>\r\n        Server data is loaded from {state.online} out of {state.total} servers <input type=\"button\" value=\"refresh all servers\" className=\"btn refresh\" onClick={handleOnClickRefresh}/>\r\n        </p>\r\n    </>)\r\n}","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport 'core-js/stable'\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./Style.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport ServersStatus from \"./ServersStatus\";\r\nimport ServerDetails from \"./ServerDetails\";\r\nimport PlayersFinder from \"./PlayersFinder\";\r\nimport JobsStats from \"./JobsStats\";\r\nimport Timer from \"./Timer\";\r\nimport {StoreProvider} from './_Store';\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router basename=\"ttstats\">\r\n      <StoreProvider>\r\n      \r\n      <header>\r\n        <ul>\r\n          <li><Link to=\"/\">Servers Status</Link></li>\r\n          <li><Link to=\"?playersfinder\">Players Finder</Link></li>\r\n          <li><Link to=\"?player\">N/A</Link></li>\r\n          <li><Link to=\"?jobs\">Jobs Stats</Link></li>\r\n        </ul>\r\n      </header>\r\n\r\n      <main>\r\n        <Route component={\r\n          (props)=>{\r\n            const url = props.location.search.split(\"=\");\r\n            switch(url[0]){\r\n              case (\"?status\"):\r\n                // return <div>test</div>\r\n                return <ServersStatus/>;\r\n              case (\"?serverinfo\"):\r\n                return <ServerDetails url={parseInt(url[1])}/>;\r\n              case (\"?player\"):\r\n                return <div>player</div>;\r\n              case (\"?jobs\"):\r\n                return <JobsStats/>;\r\n              case (\"?playersfinder\"):\r\n                return <PlayersFinder url={url}/>;\r\n              default:\r\n                return <Redirect to=\"/?status\"/>;\r\n            }\r\n          }}/>\r\n      </main>\r\n      <footer>\r\n        <Timer/>\r\n      </footer>\r\n      </StoreProvider>\r\n    </Router>\r\n  );\r\n}\r\n"],"sourceRoot":""}